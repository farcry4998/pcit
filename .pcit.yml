#
# @see https://docs.ci.khs1994.com/usage/
# @see http://www.ruanyifeng.com/blog/2016/07/yaml.html
#

language: php

# git 设置
clone:
  git:
    # image: plugins/git
    depth: 25 # default 25
    # recursive: true
    # skip_verify: false
    # tags: false
    # submodule_override:
    #   hello-world: https://github.com/octocat/hello-world.git
    hosts:
      - "git.t.khs1994.com:192.168.199.100"

# 工作目录
workspace:
  base: /app
  # path: .
  path: pcit

# 缓存设置
cache:
  # npm:
  # composer:
  directories:
    - cache
    # - vendor
    - .php_cs.cache
    - vendor

# 构建步骤
pipeline:
  before_install:
    commands: ["echo init script"]

  install:
    # image: khs1994/php:7.3.1-composer-alpine
    # commands or command
    command:
      - pwd
      - composer config -g cache-dir /tmp/pcit_cache/composer
      - composer config -g repo.packagist composer https://packagist.laravel-china.org
      - composer install
      # - composer update

  script:
    image: khs1994/php:${PHP_VERSION}-fpm-alpine
    pull: true # default is false
    privileged: true # default is false
    environment:
      - CI_REDIS_HOST=redis
      - CI_REDIS_PORT=6379
      - CI_REDIS_DATABASE=15
      - CI_MYSQL_HOST=mysql
      - CI_MYSQL_PORT=3306
      - CI_MYSQL_USERNAME=root
      - CI_MYSQL_PASSWORD=test
      - CI_MYSQL_DATABASE=test
      - CI_WEBHOOKS_TOKEN=pcit
    commands:
      - pwd
      - mv ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini.default ${PHP_INI_DIR}/conf.d/docker-php-ext-xdebug.ini
      # 服务初始化需要时间，这里延迟执行
      - sleep 30
      - vendor/bin/phpunit --coverage-clover=coverage.xml
    when:
      # platform: linux/amd64
      # platform: [ linux/*, windows/amd64 ]

      # status: changed
      # status: [ failure, success ]

      # event: tag
      # event: [push, pull_request, tag, cron]
      event: [push, pull_request, tag]

      # branch: master
      # branch: prefix/*
      # branch: [master, develop]
      # branch:
      #   include: [ master, release/* ]
      #   exclude: [ release/1.0.0, release/1.1.* ]
      # tag: 7.1.*

      # ^[0-9.]+$     1.2.0
      # ^[0-9.]+      1.2.0-rc
      # ^v([0-9.]+)$  v1.2.3

  windows_only:
    image: bash
    when:
      platform: Windows/amd64
    commands:
      - echo "Only run on Windows amd64"

  master_branch_only:
    image: bash
    when:
      branch: master
    commands:
      - echo "Only run on master branch"

  dev_branch_only:
    image: bash
    when:
      branch:
        include: dev
    commands:
      - echo "Only run on dev branch"

  master_branch_exclude:
    image: bash
    when:
      branch:
        exclude: master
    commands:
      - echo "Don't run on master branch"

  docker_build:
    settings:
      provider: docker
      # registry: docker.khs1994.com
      repo: pcit/pcit
      tags: 7.3.1-swarm-${PCIT_TAG}
      # target: php
      build_args:
        - a=1
      # dockerfile: Dockerfile
      # dockerfile: path/to/Dockerfile
    when:
      event: tag
      branch: alpha
    # please set env in settings
    # environment:
    # - DOCKER_USERNAME=username
    # - DOCKER_PASSWORD=password

  php-cs-fixer:
    # image: khs1994/php:7.3.1-composer-alpine
    commands:
      - php-cs-fixer fix

  sami:
    # image: khs1994/php:7.3.1-composer-alpine
    when:
      status: success
      matrix:
      - PHP_VERSION: 7.3.1
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    # commands:
    #  - sami update .sami.php

  gitee_pages:
    when:
      status: success
      matrix:
      - PHP_VERSION: 7.3.1
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      provider: pages
      keep_history: true
      target_branch: gh-pages
      git_url: gitee.com/pcit-ce/pcit
      local_dir: build
      email: ${EMAIL}
      username: khs1994
      git_token: ${GITEE_TOKEN}

  github_pages:
    when:
      status: success
      matrix:
      - PHP_VERSION: 7.3.1
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      provider: pages
      keep_history: true
      # target_branch: gh-pages
      git_url: github.com/pcit-ce/pcit
      local_dir: build
      # email: ${EMAIL}
      # username: khs1994
      git_token: ${GITHUB_TOKEN}

  sync_git_deployer:
    when:
      status: success
      matrix:
      - PHP_VERSION: 7.3.1
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    settings:
      provider: pages
      keep_history: true
      target_branch: master
      git_url: github.com/pcit-ce/deployer
      local_dir: src/Deployer
      git_token: ${GITHUB_TOKEN}

  upload_file:
    # image: pcit/tencent_cloud_cos:v4
    when:
      status: success
      event: tag
      branch: alpha
      matrix:
      - PHP_VERSION: 7.3.1
        NGINX_VERSION: 1.15.8
        REDIS_VERSION: 5.0.3
        MYSQL_VERSION: 5.7.24
    # environment:
    settings:
      provider: 'tencent_cloud_cos_v4'
      files:
        - README.md: pcit/tencent_cloud_cos_file_name_${PCIT_TAG}
        - Dockerfile: pcit/tencent_cloud_cos_file_name2_${PCIT_TAG}
      region: ${COS_V4_REGION}
      app_id: ${COS_V4_APP_ID}
      secret_id: ${COS_V4_SECRET_ID}
      secret_key: ${COS_V4_SECRET_KEY}
      bucket: ${COS_V4_BUCKET}

  github_releases:
    # image: pcit/github_releases
    when:
      status: success
      event: tag
      branch: alpha
      # environment:
      # - GITHUB_TOKEN=x
    settings:
      provider: 'github_release'
      github_token: ${GITHUB_TOKEN}
      file:
        - "CHANGELOG.md"
        - "ROADMAP.md"
        - README.md: NEW_FILENAME.md

  codecov:
    # image: khs1994/php:7.3.1-composer-alpine
    shell: bash
    when:
      status: success
    # please set env in settings
    environment:
      # - CODECOV_TOKEN=XXX
      - PCIT_OS_NAME=linux
    commands:
      - bash <(curl -s https://codecov.io/bash) -e PHP_VERSION,PCIT_OS_NAME

  after_success:
    command:
      - echo "build success"

  after_failure:
    image: bash
    # when:
    #   status: failure
    commands:
      - echo "build failure"

  after_changed:
    image: bash
    # when:
    #   status: changed
    commands:
      - echo "build changed"

  ping:
    # command: ["ping -c 5 git.t.khs1994.com"]
    command: ["ping -c 5 127.0.0.1"]

  cron_only:
    commands: ["echo only run on cron event"]
    when:
      event: cron

# 配置服务
services:
  mysql:

  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   environment:
  #     - MYSQL_DATABASE=test
  #     - MYSQL_ROOT_PASSWORD=test
  #   entrypoint: [ "mysqld" ]
  #   commands: [ "--character-set-server=utf8mb4", "--default-authentication-plugin=mysql_native_password" ]

  # postgresql:
  #   image: postgres:${POSTGRESQL_VERSION}-alpine
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_DB=test

  redis:

  # redis:
  #   image: redis:${REDIS_VERSION}-alpine
  #   commands: ["--bind", "0.0.0.0"]

  # mongodb:
  #   image: mongo:${MONGODB_VERSION}
  #   commands: [ --smallfiles ]

# 变量矩阵
matrix:
  PHP_VERSION:
    - 7.3.1
    # - nightly
    - 7.2.14
    # - 7.1.26
  NGINX_VERSION:
    - 1.15.8
  REDIS_VERSION:
    - 5.0.3
  MYSQL_VERSION:
    - 5.7.24
    # - 8.0.13
  # MONGODB_VERSION:
    # - 4.1.4
  # POSTGRESQL_VERSION:
    # - 10.5

# matrix:
#   include:
#     - PHP_VERSION: 7.2.14
#       MYSQL_VERSION: 5.7.24
#       REDIS_VERSION: 5.0.3
#     - PHP_VERSION: 7.1.26
#       MYSQL_VERSION: 5.7.24
#       REDIS_VERSION: 5.0.3

# 分支设置
branches:
  include: [ master,dev ]
  exclude: test*
  # include: [ master, release/* ]
  # exclude: [ release/1.0.0, release/1.1.* ]

# 通知设置
notifications:
  email:
    recipients:
      - khs1994@khs1994.com
    on_success: never # default: change
    on_failure: always # default: always

    # email:
    # - khs1994@khs1994.com

# 网络相关配置
networks:
  # 自定义 hosts
  hosts:
    - "git.khs1994.com:127.0.0.1"
    - "docker.khs1994.com:127.0.0.1"
